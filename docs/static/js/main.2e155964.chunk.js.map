{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFitchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","evento","preventDefault","trim","length","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFitchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGRC,mBAAS,IAHD,mBAGrCC,EAHqC,KAGzBC,EAHyB,KAwB5C,OACI,0BAAMC,SAXW,SAACC,GAElBA,EAAOC,iBACHJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAC3CN,EAAc,OAMd,4CACA,2BACIO,KAAK,OACLC,MAAST,EAETU,SAxBc,SAACP,GAEvBF,EAAcE,EAAOQ,OAAOF,Y,uBCVvBG,EAAO,uCAAG,WAAML,GAAN,uBAAAM,EAAA,6DAGbC,EAHa,iDAGmCC,UAAUR,GAH7C,+DAIAS,MAAMF,GAJN,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAIDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CAEHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAdvB,kBAmBZM,GAnBY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAKpC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,KCNJO,EAAU,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAGZR,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IALyB,mBAG/BC,EAH+B,KAGxBC,EAHwB,KAwBtC,OAfAC,qBAAU,WACNvB,EAAQL,GAEH6B,MAAK,SAAAX,GACFY,YAAW,WACPH,EAAS,CACLf,KAAMM,EACNO,SAAS,MAEd,UAGZ,CAACzB,IAGG0B,EDpBwBK,CAAa/B,GAAhCkB,EAHyB,EAG9BN,KAAaa,EAHiB,EAGjBA,QAEpB,OACI,oCACI,wBAAIJ,UAAU,yCAAyCrB,GACvD,yBAAKqB,UAAU,aAEVI,GAAW,uBAAGJ,UAAU,mCAAb,eAKRH,EAAOJ,KAAI,SAAAC,GAAG,OAAI,kBAAC,EAAD,eACdiB,IAAOjB,EAAIC,IACPD,UEebkB,EAhCM,WAAO,IAAD,EAGazC,mBAAS,CAAC,eAHvB,mBAGhB0C,EAHgB,KAGJ3C,EAHI,KAWvB,OACI,oCACI,2CACA,6BACA,kBAAC,EAAD,CAAaA,cAAeA,IAE5B,4BAEQ2C,EAAWpB,KAAI,SAAAoB,GAAU,OACpB,kBAAC,EAAD,CACGF,IAAOE,EACPlC,SAAYkC,UCpBxCC,IAASC,OACL,kBAAC,EAAD,MACEC,SAASC,eAAe,U","file":"static/js/main.2e155964.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropType from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n\r\n    //PERMITE MODIFICAR EL VALOR DEL FORMULARIO\r\n    const handleInputChange = (evento) => {\r\n\r\n        setInputValue(evento.target.value);\r\n\r\n    }\r\n\r\n\r\n    const handleSubmit = (evento) => {\r\n\r\n        evento.preventDefault(); \r\n        if (inputValue.trim().length > 1){\r\n            // setCategories( (categories) => categories.concat(inputValue));}\r\n            setCategories((category => [inputValue, ...category,]))\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Add Category</h2>\r\n            <input\r\n                type=\"text\"\r\n                value = {inputValue}\r\n                //PERMITE MODIFICAR EL VALOR DEL FORMULARIO\r\n                onChange = {handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropType.func.isRequired\r\n};","\r\n\r\nexport const getGifs = async(category) => {\r\n\r\n \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=12&api_key=p3OH4vpJawTquO2XgAMHeUwmLA0O3xb7`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    // console.log(data)\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    // console.log({id, title, url });\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">             \r\n            <img src={url} alt={title}/>\r\n            <h4>{title}</h4>\r\n \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFitchGifs } from '../hooks/useFitchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const {data:images, loading} = useFitchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__zoomInDown\">{category}</h3>\r\n            <div className=\"card-grif\">\r\n\r\n                {loading && <p className=\"animate__animated animate__flip\">Cargando...</p>}\r\n\r\n\r\n                {\r\n                    \r\n                    images.map(img => <GifGridItem \r\n                        key = {img.id}\r\n                        {...img}\r\n                    />)\r\n                    \r\n                }\r\n\r\n                \r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/GetGifs\";\r\n\r\nexport const useFitchGifs = (category) => {\r\n\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n\r\n    useEffect(() =>{\r\n        getGifs(category)\r\n            // .then(images => setState(images))\r\n            .then(images => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: images,\r\n                        loading: false\r\n                    }) \r\n                }, 1000);\r\n    \r\n            });\r\n    }, [category]);\r\n\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['PokemÃ³n']);\r\n\r\n    // const hanndleAdd = () => {\r\n    //     setCategories( (categories) => categories.concat('Digimon'));\r\n    //     // setCategories([...categories, 'Detective Connan'])\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1>GiExpertApp</h1>\r\n            <hr></hr>\r\n            <AddCategory setCategories={setCategories}/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(categories =>\r\n                         <GifGrid  \r\n                            key = {categories}\r\n                            category = {categories}\r\n                         />\r\n                    )\r\n                } \r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}; \r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n      document.getElementById('root')\n);\n\n"],"sourceRoot":""}